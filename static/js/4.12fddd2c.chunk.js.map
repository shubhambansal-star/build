{"version":3,"sources":["app/views/sessions/ForgotPassword.jsx"],"names":["ForgotPasswordSchema","yup","shape","email","required","ForgotPassword","state","handleChange","event","persist","setState","target","name","value","handleSubmit","isSubmitting","props","loginWithEmailAndPassword","className","style","backgroundImage","src","alt","initialValues","this","validationSchema","onSubmit","values","errors","touched","handleBlur","htmlFor","type","onChange","onBlur","to","backgroundSize","Component","connect","PropTypes","func","isRequired","user"],"mappings":"iPASMA,EAAuBC,WAAaC,MAAM,CAC9CC,MAAOF,WAAaE,MAAM,iBAAiBC,SAAS,uBAGhDC,E,4MACJC,MAAQ,CACNH,MAAO,sB,EAGTI,aAAe,SAACC,GACdA,EAAMC,UACN,EAAKC,SAAL,eAAiBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,S,EAGpDC,aAAe,SAACD,EAAD,GAA6B,EAAnBE,aACvB,EAAKC,MAAMC,0BAA0BJ,I,4CAGvC,WACE,OACE,yBACEK,UAAU,mBACVC,MAAO,CACLC,gBAAiB,yCAGnB,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8BACb,yBAAKG,IAAI,0BAA0BC,IAAI,MAEzC,wBAAIJ,UAAU,gBAAd,mBACA,kBAAC,IAAD,CACEK,cAAeC,KAAKlB,MACpBmB,iBAAkBzB,EAClB0B,SAAUF,KAAKV,eAEd,gBACCa,EADD,EACCA,OACAC,EAFD,EAECA,OAEArB,GAJD,EAGCsB,QAHD,EAICtB,cACAuB,EALD,EAKCA,WACAhB,EAND,EAMCA,aAND,EAOCC,aAPD,OASC,0BAAMW,SAAUZ,GACd,yBAAKI,UAAU,cACb,2BAAOa,QAAQ,SAAf,iBACA,2BACEb,UAAU,sDACVc,KAAK,QACLpB,KAAK,QACLqB,SAAU1B,EACV2B,OAAQJ,EACRjB,MAAOc,EAAOxB,QAEfyB,EAAOzB,OACN,yBAAKe,UAAU,yBACZU,EAAOzB,QAId,4BACEe,UAAU,yCACVc,KAAK,UAFP,sBAUN,yBAAKd,UAAU,oBACb,kBAAC,IAAD,CAAMiB,GAAG,kBAAkBjB,UAAU,cACnC,yCAKR,yBACEA,UAAU,wBACVC,MAAO,CACLiB,eAAgB,QAChBhB,gBAAiB,yCAGnB,yBAAKF,UAAU,mBACb,kBAAC,IAAD,CAAQA,UAAU,kFAChB,uBAAGA,UAAU,wBADf,uBAGA,kBAAC,IAAD,CAAQA,UAAU,+DAChB,uBAAGA,UAAU,kBADf,wBAGA,kBAAC,IAAD,CAAQA,UAAU,iEAChB,uBAAGA,UAAU,iBADf,oC,GA7FWmB,aA+GdC,uBALS,SAAChC,GAAD,MAAY,CAClCW,0BAA2BsB,IAAUC,KAAKC,WAC1CC,KAAMpC,EAAMoC,QAG0B,CACtCzB,+BADaqB,CAEZjC","file":"static/js/4.12fddd2c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { loginWithEmailAndPassword } from \"app/redux/actions/LoginActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nconst ForgotPasswordSchema = yup.object().shape({\n  email: yup.string().email(\"Invalid email\").required(\"email is required\"),\n});\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"watson@example.com\",\n  };\n\n  handleChange = (event) => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (value, { isSubmitting }) => {\n    this.props.loginWithEmailAndPassword(value);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"auth-layout-wrap\"\n        style={{\n          backgroundImage: \"url(/assets/images/photo-wide-4.jpg)\",\n        }}\n      >\n        <div className=\"auth-content\">\n          <div className=\"card o-hidden\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"p-4\">\n                  <div className=\"auth-logo text-center mb-4\">\n                    <img src=\"/assets/images/logo.png\" alt=\"\" />\n                  </div>\n                  <h1 className=\"mb-3 text-18\">Forgot Password</h1>\n                  <Formik\n                    initialValues={this.state}\n                    validationSchema={ForgotPasswordSchema}\n                    onSubmit={this.handleSubmit}\n                  >\n                    {({\n                      values,\n                      errors,\n                      touched,\n                      handleChange,\n                      handleBlur,\n                      handleSubmit,\n                      isSubmitting,\n                    }) => (\n                      <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                          <label htmlFor=\"email\">Email address</label>\n                          <input\n                            className=\"form-control form-control-rounded position-relative\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.email}\n                          />\n                          {errors.email && (\n                            <div className=\"text-danger mt-1 ml-2\">\n                              {errors.email}\n                            </div>\n                          )}\n                        </div>\n                        <button\n                          className=\"btn btn-rounded btn-primary w-100 mt-2\"\n                          type=\"submit\"\n                        >\n                          Reset Password\n                        </button>\n                      </form>\n                    )}\n                  </Formik>\n\n                  <div className=\"mt-3 text-center\">\n                    <Link to=\"/session/signin\" className=\"text-muted\">\n                      <u>Signin</u>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"col-md-6 text-center \"\n                style={{\n                  backgroundSize: \"cover\",\n                  backgroundImage: \"url(/assets/images/photo-long-3.jpg)\",\n                }}\n              >\n                <div className=\"pe-3 auth-right\">\n                  <Button className=\"btn btn-rounded btn-outline-primary btn-outline-email w-100 my-1 btn-icon-text\">\n                    <i className=\"i-Mail-with-At-Sign\"></i> Sign up with Email\n                  </Button>\n                  <Button className=\"btn btn-rounded btn-outline-google w-100 my-1 btn-icon-text\">\n                    <i className=\"i-Google-Plus\"></i> Sign up with Google\n                  </Button>\n                  <Button className=\"btn btn-rounded w-100 my-1 btn-icon-text btn-outline-facebook\">\n                    <i className=\"i-Facebook-2\"></i> Sign up with Facebook\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loginWithEmailAndPassword: PropTypes.func.isRequired,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps, {\n  loginWithEmailAndPassword,\n})(ForgotPassword);\n"],"sourceRoot":""}